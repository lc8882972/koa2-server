const Koa = require('koa')
const asset = require('koa-static')
const router = require('koa-router')()
const app = new Koa();

// const entry = require('./dist/bundle').entry.default
const setupDevServer = require('./build/setup-dev-server')
app.use(async (ctx, next) => {
  const start = Date.now();
  await next();
  const ms = Date.now() - start;
  ctx.set('X-Response-Time', `${ms}ms`)
})

let indexHTML // generated by html-webpack-plugin
let renderer // created from the webpack-generated server bundle

setupDevServer(app, {
  bundleUpdated: bundleJS => {
    renderer = createRenderer(bundleJS)
  },
  htmlUpdated: html => {
    indexHTML = parseIndex(html)
  }
})

function createRenderer(bundle) {
  // https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/README.md#why-use-bundlerenderer
  // return require('vue-server-renderer').createBundleRenderer(bundle, {
  //   cache: require('lru-cache')({
  //     max: 1000,
  //     maxAge: 1000 * 60 * 15
  //   })
  // })
  let dy = require(bundle);
  // console.log(dy)
  return dy.entry.default;
}

function parseIndex(template) {
  const contentMarker = '<!--server side render-->'
  const i = template.indexOf(contentMarker)
  return {
    head: template.slice(0, i),
    tail: template.slice(i + contentMarker.length)
  }
}

// app.use(asset(__dirname + '/dist', {
//   extensions: ['js']
// }))

// add url-route:
router.get('/', async (ctx, next) => {
  var name = ctx.params.name;
  let html = renderer(ctx.request.path)
  ctx.response.body = indexHTML
});

// add router middleware:
app.use(router.routes())

app.listen(3000)

module